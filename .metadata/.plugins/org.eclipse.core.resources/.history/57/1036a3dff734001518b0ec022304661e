package ui;

import org.apache.commons.lang3.StringUtils;

import dao.PlayerDao;
import dao.TeamDao;
import model.Player;
import model.Team;

public class UpdatePlayerUI extends AbstractUI {

	private PlayerDao playerDao;
	private TeamDao teamDao;

	public PlayerDao getPlayerDao() {
		return playerDao;
	}

	public void setPlayerDao(PlayerDao playerDao) {
		this.playerDao = playerDao;
	}

	public TeamDao getTeamDao() {
		return teamDao;
	}

	public void setTeamDao(TeamDao teamDao) {
		this.teamDao = teamDao;
	}

	public void showMenu(String wanted) {
		System.out.println("----------------------------------");
		System.out.println("");
		System.out.printf("%s를 입력하고 엔터를 누르세요", wanted);
	}

	protected Player getPlayer() {
		final String playerId = "선수ID";
		showMenu(playerId);
		System.out.println("엔터를 누르면, 메뉴로 돌아갑니다.");
		String id = getInputedString();
		if (StringUtils.isEmpty(id)) {
			return null;
		} else if (Utility.isNumeric(id, playerId)) {
			Player player = this.playerDao.getPlayer(Integer.valueOf(id));
			if (player == null) {
				System.out.printf("입력된 %s의 선수는 없는니다. \n", id);
				return getPlayer();
			}
			return player;
		}
		return getPlayer();

	}

	protected String getName(Player player) {
		final String playerName = "선수이름";
		showMenu(playerName);
		System.out.printf("변경하기 전 이름 : %s \n", player.getName());
		String name = getInputedString();
		if (StringUtils.isEmpty(name)) {
			return null;
		}
		if (Utility.isSmallLength(name, playerName, 128)) {
			return name;
		}
		return getName(player);
	}

	protected Team getTeam(Player player) {
		final String teamId = "ID";
		showMenu(teamId);
		System.out.printf("변경하기 전 팀 : %s %s \n", player.getTeam().getId(), player.getTeam().getName());
		String id = getInputedString();
		if (StringUtils.isEmpty(id)) {
			return null;
		}
		if (Utility.isNumeric(id, teamId)) {
			Team team = this.teamDao.getTeam(Integer.valueOf(id));
			if (team == null) {
				System.out.printf("입력한 %s 팀이 없습니다. \n", id);
				return getTeam(player);
			}
			return team;
		}
		return getTeam(player);
	}

	@Override
	public void show() {

		Player player = getPlayer();
		if (player == null)
			return;
		String name = getName(player);
		if (StringUtils.isNotEmpty(name))
			player.setName(name);
		Team team = getTeam(player);
		if (team != null)
			player.setTeam(team);
		this.playerDao.updatePlayer(player);

	}

}
